# Generated by Django 3.1 on 2020-09-25 21:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escuela', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.IntegerField(default=0, validators=[django.core.validators.MaxLengthValidator(9999, 'Error en la longitud'), django.core.validators.MinLengthValidator(0, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')], verbose_name='Total grupos:')),
                ('alumno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='escuela.alumno', verbose_name='Alumnos')),
            ],
        ),
        migrations.CreateModel(
            name='Salones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aulas_existentes', models.IntegerField(default=0, max_length=999, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(0, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('aulas_uso', models.IntegerField(default=0, max_length=999, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(0, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('laboratorios', models.IntegerField(default=0, max_length=999, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(1, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('talleres', models.IntegerField(default=0, max_length=999, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(1, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='grupo.grupo', verbose_name='Grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Periodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(default='', max_length=9, validators=[django.core.validators.MaxLengthValidator(9, 'Error en la longitud'), django.core.validators.MinLengthValidator(9, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('tipo_educativo', models.CharField(default='', max_length=30, validators=[django.core.validators.MaxLengthValidator(30, 'Error en la longitud'), django.core.validators.MinLengthValidator(12, 'Error de longitud mínima')])),
                ('nivel_educativo', models.CharField(default='', max_length=12, validators=[django.core.validators.MaxLengthValidator(12, 'Error en la longitud'), django.core.validators.MinLengthValidator(8, 'Error de longitud mínima')])),
                ('servicio_educativo', models.CharField(default='', max_length=30, validators=[django.core.validators.MaxLengthValidator(30, 'Error en la longitud'), django.core.validators.MinLengthValidator(5, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')])),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='grupo.grupo', verbose_name='Grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Docentes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_docentes', models.IntegerField(default=0, validators=[django.core.validators.MaxLengthValidator(9999, 'Error en la longitud'), django.core.validators.MinLengthValidator(1, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')], verbose_name='Total Docentes:')),
                ('mujeres_docentes', models.IntegerField(default=0, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(0, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')], verbose_name='Mujeres:')),
                ('hombres_docentes', models.IntegerField(default=0, validators=[django.core.validators.MaxLengthValidator(999, 'Error en la longitud'), django.core.validators.MinLengthValidator(0, 'Error de longitud mínima'), django.core.validators.RegexValidator('^[A-Za-zÀ-ÿ\\u00E0-\\u00FC ]+$', 'No se permiten caracteres especiales')], verbose_name='Hombres:')),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='grupo.grupo', verbose_name='Grupo')),
            ],
        ),
    ]
